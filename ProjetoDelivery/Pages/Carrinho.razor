@page "/carrinho"

<div class="min-h-screen bg-gradient-to-b from-green-100 via-white to-white flex flex-col items-center pt-24 px-4 animate-fade-in-up">
    <h1 class="text-3xl sm:text-5xl font-extrabold text-[#6836c5] text-center mb-8 drop-shadow-lg animate-fade-in-down">
        Seu Carrinho
    </h1>

    @if (ItensCarrinho.Count == 0)
    {
        <p class="text-center text-lg text-black mb-6">Seu carrinho está vazio.</p>
    }
    else
    {
        <div class="grid grid-cols-1 sm:grid-cols-2 gap-6 w-full max-w-4xl">
            @foreach (var item in ItensCarrinho)
            {
                <div class="bg-white rounded-2xl shadow-xl p-6 flex flex-col items-center text-center transform hover:scale-105 transition-all duration-300 border-2 border-green-300 hover:border-[#6836c5] cursor-pointer"
                     @onclick="() => SelecionarParaRemover(item)">
                    <h2 class="text-2xl font-bold text-black mb-2">@item.Nome</h2>
                    <p class="text-green-600 font-semibold">Quantidade: @item.Quantidade</p>
                    <p class="text-sm text-gray-600">Total: R$ @(item.PrecoUnitario * item.Quantidade)</p>
                </div>
            }
        </div>

        <button class="mt-10 bg-green-500 hover:bg-green-600 text-white font-bold py-3 px-6 sm:px-10 rounded-2xl text-lg w-full sm:w-auto transform hover:scale-105 transition-all duration-300"
                @onclick="MostrarModal">
            Confirmar Compra
        </button>
    }

    @if (MostrarModalConfirmacao)
    {
        <div class="fixed inset-0 flex justify-center items-center backdrop-blur-md z-50 animate-fade-in-up">
            <div class="bg-white p-8 rounded-2xl shadow-2xl w-96 flex flex-col items-center transform transition-transform duration-300 hover:scale-105">
                <h2 class="text-2xl font-bold text-center text-black mb-4">Confirmar Pedido</h2>
                <p class="text-[#6836c5] text-center mb-6">Itens no carrinho:</p>

                <ul class="mb-4 w-full text-left px-4">
                    @foreach (var item in ItensCarrinho)
                    {
                        <li class="text-black font-medium mb-1">
                            @item.Nome - Quantidade: @item.Quantidade - Preço: R$ @item.PrecoUnitario.ToString("F2")
                        </li>
                    }
                </ul>

                <p class="text-lg font-bold text-green-700 mb-6">
                    Total: R$ @TotalCarrinho.ToString("F2")
                </p>

                <div class="flex flex-col w-full space-y-2">
                    <button class="w-full bg-[#6836c5] hover:bg-purple-700 text-white font-semibold py-2 rounded"
                            @onclick="ConfirmarCompraFinal">
                        Confirmar
                    </button>
                    <button class="w-full bg-red-500 hover:bg-red-600 text-white font-semibold py-2 rounded"
                            @onclick="CancelarModal">
                        Cancelar
                    </button>
                </div>
            </div>
        </div>
    }

    @if (MostrarModalRemover && ItemSelecionado != null)
    {
        <div class="fixed inset-0 flex justify-center items-center backdrop-blur-md z-50 animate-fade-in-up">
            <div class="bg-white p-6 rounded-2xl shadow-2xl w-80 flex flex-col items-center transform transition-transform duration-300 hover:scale-105">
                <h2 class="text-xl font-bold text-black mb-4 text-center">Remover 1 unidade de:</h2>
                <p class="text-[#6836c5] text-center mb-4 font-semibold">@ItemSelecionado.Nome</p>

                <div class="flex flex-col w-full space-y-2">
                    <button class="w-full bg-[#6836c5] hover:bg-purple-700 text-white font-semibold py-2 rounded"
                            @onclick="ConfirmarRemocao">
                        Confirmar Remoção
                    </button>
                    <button class="w-full bg-red-500 hover:bg-red-600 text-white font-semibold py-2 rounded"
                            @onclick="CancelarRemocao">
                        Cancelar
                    </button>
                </div>
            </div>
        </div>
    }

    @if (MostrarMensagemConfirmada)
    {
        <div class="fixed top-1/3 left-1/2 transform -translate-x-1/2 bg-green-500 text-white px-8 py-4 rounded-2xl shadow-lg text-xl font-bold animate-scale-fade z-50">
            Compra Confirmada!
        </div>
    }
</div>

@code {
    private class ItemCarrinho
    {
        public string Nome { get; set; } = "";
        public int Quantidade { get; set; }
        public decimal PrecoUnitario { get; set; }
    }

    private List<ItemCarrinho> ItensCarrinho = new();
    private bool MostrarModalConfirmacao = false;
    private bool MostrarMensagemConfirmada = false;
    private bool MostrarModalRemover = false;
    private ItemCarrinho? ItemSelecionado = null;

    private Dictionary<string, decimal> PrecosDosProdutos = new()
    {
        { "Hambúrguer Artesanal", 29.90m },
        { "Pizza Marguerita", 39.90m },
        { "Sushi Especial", 49.90m }
    };

    protected override void OnInitialized()
    {
        var random = new Random();
        var produtosSorteados = PrecosDosProdutos.Keys.OrderBy(x => random.Next()).Take(2).ToList();

        foreach (var produto in produtosSorteados)
        {
            int quantidade = random.Next(1, 6);
            decimal preco = PrecosDosProdutos[produto];

            ItensCarrinho.Add(new ItemCarrinho
            {
                Nome = produto,
                Quantidade = quantidade,
                PrecoUnitario = preco
            });
        }
    }

    private void MostrarModal()
    {
        MostrarModalConfirmacao = true;
    }

    private void CancelarModal()
    {
        MostrarModalConfirmacao = false;
    }

    private async void ConfirmarCompraFinal()
    {
        ItensCarrinho.Clear();
        MostrarModalConfirmacao = false;
        MostrarMensagemConfirmada = true;

        await Task.Delay(2000);

        MostrarMensagemConfirmada = false;
        StateHasChanged();
    }

    private decimal TotalCarrinho => ItensCarrinho.Sum(item => item.Quantidade * item.PrecoUnitario);

    private void SelecionarParaRemover(ItemCarrinho item)
    {
        ItemSelecionado = item;
        MostrarModalRemover = true;
    }

    private void CancelarRemocao()
    {
        ItemSelecionado = null;
        MostrarModalRemover = false;
    }

    private void ConfirmarRemocao()
    {
        if (ItemSelecionado != null)
        {
            ItemSelecionado.Quantidade--;

            if (ItemSelecionado.Quantidade <= 0)
            {
                ItensCarrinho.Remove(ItemSelecionado);
            }
        }

        ItemSelecionado = null;
        MostrarModalRemover = false;
    }
}
