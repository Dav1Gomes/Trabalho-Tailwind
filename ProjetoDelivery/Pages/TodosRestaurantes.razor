@page "/todos-restaurantes"
@using ProjetoDelivery.Models
@using ProjetoDelivery.Services
@inject RestauranteService RestauranteService
@inject NavigationManager NavigationManager

<div class="min-h-screen bg-gradient-to-b from-green-100 via-white to-white flex flex-col items-center pt-24 px-4 sm:px-6 animate-fade-in-up">
    <h1 class="text-3xl sm:text-5xl font-extrabold text-[#6836c5] text-center mb-10 drop-shadow-lg animate-fade-in-down">
        Todos os Restaurantes   
    </h1>

    <div class="relative w-full max-w-3xl mb-10">
        <input 
            type="text" 
            placeholder="Buscar restaurantes..." 
            @bind="Pesquisa" 
            class="w-full pl-12 pr-4 py-3 border-2 border-[#6836c5] rounded-full focus:outline-none focus:ring-2 focus:ring-[#6836c5] text-black"
        />
        <div class="absolute left-4 top-1/2 transform -translate-y-1/2 text-[#6836c5]">
            <svg xmlns="http://www.w3.org/2000/svg" class="lucide lucide-search w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                <circle cx="11" cy="11" r="8"></circle>
                <line x1="21" y1="21" x2="16.65" y2="16.65"></line>
            </svg>
        </div>
    </div>

    <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6 sm:gap-8 w-full max-w-7xl">
        @foreach (var restaurante in RestaurantesFiltrados)
        {
            <div class="bg-white rounded-2xl shadow-xl p-6 flex flex-col items-center text-center cursor-pointer transform hover:scale-105 transition-all duration-300 border-2 border-green-300 hover:border-[#6836c5]"
                 @onclick="@(() => NavigationManager.NavigateTo($"/restaurante/{restaurante.Id}"))">
                <div class="w-20 h-20 mb-4 rounded-full bg-green-200 flex items-center justify-center text-3xl text-[#6836c5] font-extrabold shadow-md">
                    <svg xmlns="http://www.w3.org/2000/svg" class="lucide w-8 h-8 text-[#6836c5]" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <path d="M3 2v7c0 1.1.9 2 2 2h4a2 2 0 0 0 2-2V2" />
                        <path d="M7 2v20" />
                        <path d="M21 15V2a5 5 0 0 0-5 5v6c0 1.1.9 2 2 2h3Zm0 0v7" />
                    </svg>
                </div>

                <h2 class="text-xl sm:text-2xl font-bold text-black mb-2">@restaurante.Nome</h2>
                <p class="text-green-600 font-semibold">Nota: @restaurante.Nota ‚≠ê</p>
            </div>
        }
    </div>
</div>

@code {
    private string Pesquisa { get; set; } = "";
    private List<Restaurante> Restaurantes = new();

    private IEnumerable<Restaurante> RestaurantesFiltrados =>
        string.IsNullOrWhiteSpace(Pesquisa)
        ? Restaurantes
        : Restaurantes.Where(r => r.Nome.Contains(Pesquisa, StringComparison.OrdinalIgnoreCase));


    protected override async Task OnInitializedAsync()
    {
        Restaurantes = await RestauranteService.ListarTodosAsync();
    }
}

