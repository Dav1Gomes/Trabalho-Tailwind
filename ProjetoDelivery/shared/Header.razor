@inject NavigationManager NavigationManager

<div class="flex items-center justify-between p-4 text-black bg-white bg-opacity-80 backdrop-blur-md shadow-md fixed w-full z-50">
    <!-- Logo -->
    <div class="cursor-pointer" @onclick="@(() => NavigationManager.NavigateTo("/"))">
        <img src="img/logo-header.png" alt="Boxly Logo" class="h-17 w-50" />
    </div>

    <!-- Menu -->
    <div class="flex space-x-6 text-black font-bold">
        <a class="hover:underline" href="/">Home</a>
        <a class="hover:underline" href="/todos-restaurantes">Todos Restaurantes</a>
        <a class="hover:underline" href="/itens-mais-vendidos">Itens Mais Vendidos</a>
    </div>

    <!-- Botões dinâmicos -->
    <div class="flex space-x-4">
        @if (!MainLayout.UsuarioLogado)
        {
            <button class="bg-[#6836c5] hover:bg-purple-700 text-white font-semibold py-1 px-4 rounded transform hover:scale-105 transition-transform duration-300"
                    @onclick="@(() => NavigationManager.NavigateTo("/login"))">
                Login
            </button>
            <button class="bg-[#6836c5] hover:bg-purple-700 text-white font-semibold py-1 px-4 rounded transform hover:scale-105 transition-transform duration-300"
                    @onclick="@(() => NavigationManager.NavigateTo("/registro"))">
                Registro
            </button>
        }
        else
        {
            <button class="bg-[#6836c5] hover:bg-purple-700 text-white font-semibold py-1 px-4 rounded transform hover:scale-105 transition-transform duration-300"
                    @onclick="@(() => NavigationManager.NavigateTo("/informacoes-logado"))">
                Informações
            </button>
            <button class="bg-[#6836c5] hover:bg-red-700 text-white font-semibold py-1 px-4 rounded transform hover:scale-105 transition-transform duration-300"
                    @onclick="Logout">
                Logout
            </button>
        }
    </div>

    @if (MensagemLogout != null)
{
    <div class="fixed bottom-5 right-5 bg-green-500 bg-opacity-90 text-white px-6 py-3 rounded-2xl shadow-lg animate-fade-in-up z-10">
        @MensagemLogout
    </div>
}

</div>

@code {
    private string? MensagemLogout;

    protected override void OnInitialized()
    {
        MainLayout.OnUsuarioLogadoChange += AtualizarHeader;
    }

    private void AtualizarHeader()
    {
        InvokeAsync(StateHasChanged);
    }

    private async void Logout()
    {
        MainLayout.DefinirUsuarioLogado(false);
        NavigationManager.NavigateTo("/");
        MensagemLogout = "Você saiu com sucesso!";
        StateHasChanged();
        await Task.Delay(3000);
        MensagemLogout = null;
        StateHasChanged();
    }
}

